service: translation-bot
frameworkVersion: '3'

provider:
  name: aws
  runtime: ruby2.7
  memorySize: 256

# you can define service wide environment variables here
#  environment:
#    variable1: value1

package:
 patterns:
   - "!node_modules/**"
   - "!*.template"
   - "!package-lock.json"
   - "!package.json"
   - "*.rb"
   - config.yml

functions:
  HandleTelegramMessage:
    handler: handle_telegram_message.handle
  TranslateMessage:
    handler: translate_message.chatgpt_translate
  RespondToTelegram:
    handler: respond_to_telegram.send_message
stepFunctions:
  stateMachines:
    TranslationBot:
      events:
        - http:
            path: /handle-message
            method: POST
      name: TranslationBot
      definition:
        StartAt: HandleTelegramMessageState
        States:
          HandleTelegramMessageState:
            Type: Task
            Resource:
              Fn::GetAtt: [HandleTelegramMessage, Arn]
            Next: CheckIfTranslateNeeded
          CheckIfTranslateNeeded:
            Type: Choice
            Choices:
              - Variable: "$.message_to_translate"
                IsNull: false
                Next: TranslateMessageState
            Default: RespondToTelegramState
          TranslateMessageState:
            Type: Task
            Resource:
              Fn::GetAtt: [TranslateMessage, Arn]
            Next: RespondToTelegramState
          RespondToTelegramState:
            Type: Task
            Resource:
              Fn::GetAtt: [RespondToTelegram, Arn]
            End: true
  validate: true

plugins:
  - serverless-step-functions
