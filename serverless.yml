service: translation-bot
frameworkVersion: '3'

provider:
  name: aws
  runtime: ruby2.7
  memorySize: 256
  httpApi:
    cors: false
    authorizers:
      telegramWebhookAuthorizer:
        type: request
        functionName: TelegramWebhookAuthorizer
        identitySource:
          - $request.header.x-telegram-bot-api-secret-token
        payloadVersion: "2.0"
        enableSimpleResponses: true
  logs:
    httpApi:
      format: '{ "requestId":"$context.requestId", "ip": "$context.identity.sourceIp", "requestTime":"$context.requestTime", "httpMethod":"$context.httpMethod","routeKey":"$context.routeKey", "status":"$context.status","protocol":"$context.protocol", "responseLength":"$context.responseLength", "authorizerError": "$context.authorizer.error" }'


package:
  individually: true
  patterns:
    - "!node_modules/**"
    - "!*"
    - errors.rb
    - config.yml

functions:
  TelegramWebhookAuthorizer:
    handler: telegram_webhook_authorizer.authorize
    package:
      patterns:
        - telegram_webhook_authorizer.rb
  HandleTelegramMessage:
    handler: handle_telegram_message.handle
    package:
      patterns:
        - handle_telegram_message.rb
    events:
      - httpApi:
          path: /handle-message
          method: POST
          authorizer:
            name: telegramWebhookAuthorizer
  TranslateMessage:
    handler: translate_message.chatgpt_translate
    package:
      patterns:
        - translate_message.rb
  RespondToTelegram:
    handler: respond_to_telegram.send_message
    package:
      patterns:
        - respond_to_telegram.rb
stepFunctions:
  stateMachines:
    TranslationBot:
      name: TranslationBot
      definition:
        StartAt: TranslateMessageState
        States:
          TranslateMessageState:
            Type: Task
            Resource:
              Fn::GetAtt: [TranslateMessage, Arn]
            Next: RespondToTelegramState
          RespondToTelegramState:
            Type: Task
            Resource:
              Fn::GetAtt: [RespondToTelegram, Arn]
            End: true
  validate: true

plugins:
  - serverless-step-functions
